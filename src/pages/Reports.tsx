import React, { useState } from 'react';
import { Calendar, Download, TrendingUp, TrendingDown, FileText, BarChart3, Activity } from 'lucide-react';

const Reports: React.FC = () => {
  const [selectedPeriod, setSelectedPeriod] = useState('weekly');

  const periods = [
    { id: 'weekly', label: 'Ï£ºÍ∞Ñ' },
    { id: 'monthly', label: 'ÏõîÍ∞Ñ' },
    { id: 'quarterly', label: 'Î∂ÑÍ∏∞' }
  ];

  const weeklyReport = {
    period: '2025-01-20 ~ 2025-01-26',
    highlights: [
      { type: 'success', title: 'Í±∏Ïùå Ïàò Î™©Ìëú Îã¨ÏÑ±', value: '7Ïùº Ïó∞ÏÜç' },
      { type: 'improvement', title: 'ÏàòÎ©¥ ÏãúÍ∞Ñ Ï¶ùÍ∞Ä', value: '+45Î∂Ñ' },
      { type: 'warning', title: 'ÏàòÎ∂Ñ ÏÑ≠Ï∑® Î∂ÄÏ°±', value: '-20%' }
    ],
    improvements: [
      'ÏàòÎ©¥ ÏãúÍ∞ÑÏùÑ 30Î∂Ñ Îçî ÎäòÎ†§Î≥¥ÏÑ∏Ïöî',
      'ÏàòÎ∂Ñ ÏÑ≠Ï∑®ÎüâÏùÑ ÌïòÎ£® 500ml Ï¶ùÍ∞ÄÏãúÌÇ§ÏÑ∏Ïöî',
      'Ï£º 3Ìöå Í∑ºÎ†• Ïö¥ÎèôÏùÑ Ï∂îÍ∞ÄÌï¥Î≥¥ÏÑ∏Ïöî'
    ],
    achievements: [
      '10,000Í±∏Ïùå 7Ïùº Ïó∞ÏÜç Îã¨ÏÑ±',
      'Ïö¥Îèô Î™©Ìëú 120% Îã¨ÏÑ±',
      'Ï≤¥Ï§ë Í¥ÄÎ¶¨ Î™©Ìëú ÏßÑÌñâ Ï§ë'
    ]
  };

  const handleDownloadPDF = () => {
    // PDF download logic would go here
    console.log('Downloading PDF report...');
  };

  const handleDownloadCSV = () => {
    // CSV download logic would go here
    console.log('Downloading CSV data...');
  };

  return (
    <div className="space-y-8">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold text-gray-100">Í±¥Í∞ï Î¶¨Ìè¨Ìä∏</h1>
          <p className="text-gray-400 mt-1">Í±¥Í∞ï Îç∞Ïù¥ÌÑ∞Î•º Ï¢ÖÌï© Î∂ÑÏÑùÌïú Î¶¨Ìè¨Ìä∏Î•º ÌôïÏù∏ÌïòÏÑ∏Ïöî</p>
        </div>
        <div className="flex items-center space-x-3">
          <select
            value={selectedPeriod}
            onChange={(e) => setSelectedPeriod(e.target.value)}
            className="rounded-xl border border-gray-600 bg-gray-700 px-4 py-2 text-gray-100 focus:border-emerald-500 focus:outline-none"
          >
            {periods.map((period) => (
              <option key={period.id} value={period.id}>
                {period.label} Î¶¨Ìè¨Ìä∏
              </option>
            ))}
          </select>
        </div>
      </div>

      {/* Report Overview */}
      <div className="rounded-2xl border border-gray-700 bg-slate-800/50 p-6">
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center space-x-3">
            <div className="rounded-full bg-blue-500/20 p-3">
              <BarChart3 className="h-6 w-6 text-blue-400" />
            </div>
            <div>
              <h2 className="text-xl font-semibold text-gray-100">Ï£ºÍ∞Ñ Í±¥Í∞ï ÏöîÏïΩ</h2>
              <p className="text-gray-400">{weeklyReport.period}</p>
            </div>
          </div>
          <div className="flex space-x-2">
            <button
              onClick={handleDownloadCSV}
              className="flex items-center space-x-2 rounded-xl border border-gray-600 px-4 py-2 text-sm font-medium text-gray-300 hover:bg-gray-700"
            >
              <Download className="h-4 w-4" />
              <span>CSV</span>
            </button>
            <button
              onClick={handleDownloadPDF}
              className="flex items-center space-x-2 rounded-xl bg-emerald-500 px-4 py-2 text-sm font-medium text-white hover:bg-emerald-600"
            >
              <FileText className="h-4 w-4" />
              <span>PDF ÎÇ¥Î≥¥ÎÇ¥Í∏∞</span>
            </button>
          </div>
        </div>

        {/* Key Highlights */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
          {weeklyReport.highlights.map((highlight, index) => {
            const getConfig = () => {
              switch (highlight.type) {
                case 'success':
                  return {
                    icon: TrendingUp,
                    bgColor: 'bg-emerald-500/20',
                    borderColor: 'border-emerald-500/30',
                    textColor: 'text-emerald-400'
                  };
                case 'improvement':
                  return {
                    icon: TrendingUp,
                    bgColor: 'bg-blue-500/20',
                    borderColor: 'border-blue-500/30',
                    textColor: 'text-blue-400'
                  };
                case 'warning':
                  return {
                    icon: TrendingDown,
                    bgColor: 'bg-yellow-500/20',
                    borderColor: 'border-yellow-500/30',
                    textColor: 'text-yellow-400'
                  };
                default:
                  return {
                    icon: Activity,
                    bgColor: 'bg-gray-500/20',
                    borderColor: 'border-gray-500/30',
                    textColor: 'text-gray-400'
                  };
              }
            };

            const config = getConfig();
            const Icon = config.icon;

            return (
              <div key={index} className={`rounded-xl border ${config.borderColor} ${config.bgColor} p-4`}>
                <div className="flex items-center space-x-3 mb-2">
                  <Icon className={`h-5 w-5 ${config.textColor}`} />
                  <span className={`text-sm font-medium ${config.textColor}`}>
                    {highlight.value}
                  </span>
                </div>
                <div className="text-gray-100 font-medium">{highlight.title}</div>
              </div>
            );
          })}
        </div>

        {/* Charts Placeholder */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
          <div className="rounded-xl border border-gray-700 bg-gray-800/50 p-6">
            <h3 className="font-semibold text-gray-100 mb-4">Ï£ºÍ∞Ñ ÌôúÎèô Ìä∏Î†åÎìú</h3>
            <div className="h-48 flex items-center justify-center bg-gray-700/30 rounded-lg">
              <div className="text-center text-gray-400">
                <BarChart3 className="h-8 w-8 mx-auto mb-2" />
                <div className="text-sm">ÌôúÎèô Îç∞Ïù¥ÌÑ∞ Ï∞®Ìä∏</div>
              </div>
            </div>
          </div>

          <div className="rounded-xl border border-gray-700 bg-gray-800/50 p-6">
            <h3 className="font-semibold text-gray-100 mb-4">ÏàòÎ©¥ Ìå®ÌÑ¥ Î∂ÑÏÑù</h3>
            <div className="h-48 flex items-center justify-center bg-gray-700/30 rounded-lg">
              <div className="text-center text-gray-400">
                <Activity className="h-8 w-8 mx-auto mb-2" />
                <div className="text-sm">ÏàòÎ©¥ Ìå®ÌÑ¥ Ï∞®Ìä∏</div>
              </div>
            </div>
          </div>
        </div>

        {/* Achievements & Improvements */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <div className="rounded-xl border border-emerald-500/30 bg-emerald-500/10 p-6">
            <h3 className="font-semibold text-emerald-400 mb-4 flex items-center">
              <span className="mr-2">üèÜ</span>
              Ï£ºÏöî ÏÑ±Í≥º
            </h3>
            <ul className="space-y-2">
              {weeklyReport.achievements.map((achievement, index) => (
                <li key={index} className="flex items-center space-x-3 text-gray-300">
                  <div className="w-2 h-2 rounded-full bg-emerald-400"></div>
                  <span className="text-sm">{achievement}</span>
                </li>
              ))}
            </ul>
          </div>

          <div className="rounded-xl border border-blue-500/30 bg-blue-500/10 p-6">
            <h3 className="font-semibold text-blue-400 mb-4 flex items-center">
              <span className="mr-2">üí°</span>
              Í∞úÏÑ† Ï†úÏïà
            </h3>
            <ul className="space-y-2">
              {weeklyReport.improvements.map((improvement, index) => (
                <li key={index} className="flex items-center space-x-3 text-gray-300">
                  <div className="w-2 h-2 rounded-full bg-blue-400"></div>
                  <span className="text-sm">{improvement}</span>
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>

      {/* Historical Reports */}
      <div className="rounded-2xl border border-gray-700 bg-slate-800/50 p-6">
        <h2 className="text-lg font-semibold text-gray-100 mb-4">Ïù¥Ï†Ñ Î¶¨Ìè¨Ìä∏</h2>
        <div className="space-y-3">
          {[
            { period: '2025-01-13 ~ 2025-01-19', type: 'Ï£ºÍ∞Ñ', status: 'completed' },
            { period: '2025-01-06 ~ 2025-01-12', type: 'Ï£ºÍ∞Ñ', status: 'completed' },
            { period: '2024ÎÖÑ 12Ïõî', type: 'ÏõîÍ∞Ñ', status: 'completed' },
            { period: '2024 Q4', type: 'Î∂ÑÍ∏∞', status: 'completed' }
          ].map((report, index) => (
            <div key={index} className="flex items-center justify-between rounded-xl border border-gray-700 p-4 hover:bg-gray-700/30">
              <div className="flex items-center space-x-4">
                <Calendar className="h-5 w-5 text-gray-400" />
                <div>
                  <div className="font-medium text-gray-100">{report.period}</div>
                  <div className="text-sm text-gray-400">{report.type} Î¶¨Ìè¨Ìä∏</div>
                </div>
              </div>
              <div className="flex items-center space-x-2">
                <span className="inline-flex items-center rounded-full bg-emerald-500/20 px-2 py-1 text-xs text-emerald-400">
                  ÏôÑÎ£å
                </span>
                <button className="rounded-lg border border-gray-600 p-2 text-gray-400 hover:text-gray-300 hover:bg-gray-700">
                  <Download className="h-4 w-4" />
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Reports;